--Part 1
USE movies

--Problem 1
SELECT
	m.TITLE,
	m.YEAR,
	m.LENGTH
FROM MOVIE AS m
WHERE m.LENGTH > 120 AND m.YEAR < 2000
	OR m.LENGTH IS NULL

--Problem 2
SELECT
	ms.NAME,
	ms.GENDER
FROM MOVIESTAR AS ms
WHERE ms.NAME LIKE 'J%'
	AND ms.BIRTHDATE > 1948
ORDER BY ms.NAME DESC

--Problem 3
SELECT 
	m.STUDIONAME,
	COUNT(DISTINCT s.STARNAME) AS NumberOfActors
FROM MOVIE AS m
JOIN STARSIN AS s
	ON m.TITLE = s.MOVIETITLE
GROUP BY m.STUDIONAME

--Problem 4
SELECT 
	ms.NAME,
	COUNT(m.TITLE) AS NumberOfMovies
FROM MOVIESTAR AS ms
LEFT JOIN STARSIN AS s
	ON ms.NAME = s.STARNAME
LEFT JOIN MOVIE AS m
	ON s.MOVIETITLE = m.TITLE
GROUP BY ms.NAME

--Problem 5
SELECT 
	m1.STUDIONAME,
	m1.TITLE,
	m1.YEAR
FROM MOVIE AS m1
WHERE m1.TITLE = (
	SELECT TOP(1)
		m2.TITLE
	FROM MOVIE AS m2
	WHERE m2.STUDIONAME = m1.STUDIONAME
	ORDER BY m2.YEAR DESC
)
AND m1.YEAR = (
	SELECT TOP(1)
		m2.YEAR
	FROM MOVIE AS m2
	WHERE m2.STUDIONAME = m1.STUDIONAME
	ORDER BY m2.YEAR DESC
)
ORDER BY m1.YEAR DESC

--Problem 6
SELECT TOP(1)
	ms.NAME
FROM MOVIESTAR AS ms
WHERE ms.GENDER = 'm'
ORDER BY ms.BIRTHDATE DESC

--Problem 7
SELECT
	m.STUDIONAME,
	s.STARNAME,
	COUNT(m.TITLE) AS MoviesCount
FROM STARSIN AS s
JOIN MOVIE AS m 
	ON s.MOVIETITLE = m.TITLE
GROUP BY s.STARNAME, m.STUDIONAME
HAVING COUNT(m.TITLE) >= ALL (
	SELECT
		COUNT(m2.TITLE)
	FROM STARSIN AS s2
	JOIN MOVIE AS m2
		ON s2.MOVIETITLE = m2.TITLE
	WHERE m2.STUDIONAME = m.STUDIONAME
	GROUP BY s2.STARNAME, m2.STUDIONAME
)

--OR

SELECT
	m.STUDIONAME,
	s.STARNAME,
	COUNT(m.TITLE) AS MoviesCount
FROM STARSIN AS s
JOIN MOVIE AS m 
	ON s.MOVIETITLE = m.TITLE
GROUP BY s.STARNAME, m.STUDIONAME
HAVING COUNT(m.TITLE) = (
	SELECT TOP(1)
		COUNT(m2.TITLE) AS mCount
	FROM STARSIN AS s2
	JOIN MOVIE AS m2
		ON s2.MOVIETITLE = m2.TITLE
	WHERE m2.STUDIONAME = m.STUDIONAME
	GROUP BY s2.STARNAME, m2.STUDIONAME
	ORDER BY mCount DESC
)

--Problem 8
SELECT
	s.MOVIETITLE,
	s.MOVIEYEAR,
	COUNT(s.STARNAME) AS StarCount
FROM STARSIN AS s
GROUP BY s.MOVIETITLE, s.MOVIEYEAR
HAVING COUNT(s.STARNAME) > 2

--Part 2
USE ships

--Problem 1
SELECT DISTINCT
	o.SHIP
FROM OUTCOMES AS o
WHERE o.SHIP LIKE 'C%'
	OR o.SHIP LIKE 'K%'

--Problem 2
SELECT DISTINCT 
	s.NAME,
	s.CLASS
FROM SHIPS AS s
LEFT JOIN OUTCOMES AS o
	ON s.NAME = o.SHIP
WHERE o.BATTLE IS NULL
	OR o.RESULT != 'sunk'

--Problem 3
SELECT
	c.COUNTRY,
	COUNT(o.SHIP) AS ShipsCount
FROM CLASSES AS c
LEFT JOIN SHIPS AS s
	ON c.CLASS = s.CLASS
LEFT JOIN OUTCOMES AS o
	ON s.NAME = o.SHIP
WHERE o.RESULT IS NULL
	OR o.RESULT = 'sunk'
GROUP BY c.COUNTRY

--Problem 4
SELECT
	o.BATTLE
FROM OUTCOMES AS o
GROUP  BY o.BATTLE
HAVING COUNT(o.SHIP) > (
	SELECT
		COUNT(o.SHIP) AS ShipsCount
	FROM OUTCOMES AS o
	WHERE o.BATTLE = 'Guadalcanal'
	GROUP  BY o.BATTLE
)

--Problem 5
SELECT
	o1.BATTLE
FROM OUTCOMES AS o1
JOIN SHIPS AS s1
	ON o1.SHIP = s1.NAME
JOIN CLASSES AS c1
	ON s1.CLASS = c1.CLASS
GROUP BY o1.BATTLE
HAVING COUNT(DISTINCT c1.COUNTRY) > (
	SELECT
		COUNT(DISTINCT c2.COUNTRY) AS CountriesCount
	FROM OUTCOMES AS o2
	JOIN SHIPS AS s2
		ON o2.SHIP = s2.NAME
	JOIN CLASSES AS c2
		ON s2.CLASS = c2.CLASS
	WHERE o2.BATTLE = 'Surigao Strait'
	GROUP BY o2.BATTLE
)

--Problem 6
SELECT
	s.NAME,
	c.DISPLACEMENT,
	c.NUMGUNS
FROM SHIPS AS s
JOIN CLASSES AS c
	ON s.CLASS = c.CLASS
JOIN CLASSES AS c2
	ON c.CLASS = c2.CLASS
WHERE c.DISPLACEMENT = (
	SELECT  TOP(1)
		c.DISPLACEMENT
	FROM CLASSES AS c
	ORDER BY  c.DISPLACEMENT
)
AND c.NUMGUNS >= c2.NUMGUNS

--OR

SELECT
	s.NAME,
	c.DISPLACEMENT,
	c.NUMGUNS
FROM SHIPS AS s
JOIN CLASSES AS c
	ON s.CLASS = c.CLASS
WHERE c.DISPLACEMENT <= ALL (
	SELECT
		c.DISPLACEMENT
	FROM CLASSES AS c
)
AND c.NUMGUNS >= ALL (
	SELECT
		c2.NUMGUNS
	FROM CLASSES AS c2
	WHERE c2.DISPLACEMENT = c.DISPLACEMENT
)

--Problem 7
SELECT
	COUNT(o1.SHIP) AS ShipsCount
FROM OUTCOMES AS o1
JOIN BATTLES AS b1
	ON o1.BATTLE = b1.NAME
WHERE o1.RESULT = 'ok'
AND o1.SHIP IN (
	SELECT
		o2.SHIP
	FROM OUTCOMES AS o2
	JOIN BATTLES AS b2
		ON o2.BATTLE = b2.NAME
	WHERE o2.RESULT = 'damaged'
	AND b2.DATE < b1.DATE
)

--Problem 8
SELECT
	o1.SHIP
FROM OUTCOMES AS o1
JOIN BATTLES AS b1
	ON o1.BATTLE = b1.NAME
WHERE o1.RESULT = 'ok'
AND o1.SHIP IN (
	SELECT
		o2.SHIP
	FROM OUTCOMES AS o2
	JOIN BATTLES AS b2
		ON o2.BATTLE = b2.NAME
	WHERE o2.RESULT = 'damaged'
	AND b2.DATE < b1.DATE
)
AND o1.BATTLE IN (
	SELECT
		o2.BATTLE
	FROM OUTCOMES AS o2
	GROUP BY o2.BATTLE
	HAVING COUNT(o2.SHIP) > 2
)

--Part 3
USE pc